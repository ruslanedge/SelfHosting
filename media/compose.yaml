networks:
  proxy:
    external: true

volumes:
  sonarr_config:
    external: true
  tv:
    external: true
  movies:
    external: true
  gluetun:
    external: true
  deluge:
    external: true
  media_downloads:
    external: true
  overseerr-conf:
    external: true
  radarr_config:
    external: true
  prowlarr_conf:
    external: true

services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
      - 58846:58846 #optional

    volumes:
      - gluetun:/gluetun
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      - VPN_SERVICE_PROVIDER=private internet access
      - VPN_TYPE=openvpn
      # OpenVPN:
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - SERVER_REGIONS=CA Toronto
      - TZ=America/Regina
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Regina
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - deluge:/config
      - media_downloads:/downloads

    restart: unless-stopped
      
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Regina
    volumes:
      - sonarr_config:/config
      - media_downloads:/downloads
      - tv:/tv #optional
    ports:
      - 8989:8989
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr-local.roosterweb.net`)"
      - "traefik.http.routers.sonarr.entrypoints=https"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    networks:
      - proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - radarr_config:/config
      - movies:/movies #optional
      - media_downloads:/downloads #optional
    ports:
      - 7878:7878
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr-local.roosterweb.net`)"
      - "traefik.http.routers.radarr.entrypoints=https"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    restart: unless-stopped
    
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    networks: 
      - proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Regina
    volumes:
      - overseerr-conf:/config
    ports:
      - 5055:5055
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`overseerr-local.roosterweb.net`) || Host(`overseerr.roosterweb.net`) " 
      - "traefik.http.routers.overseerr.entrypoints=https"
      - "traefik.http.routers.overseerr.tls=true"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    networks:
      - proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Regina
    volumes:
      - prowlarr_conf:/config
    ports:
      - 9696:9696
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlar-local.roosterweb.net`)" 
      - "traefik.http.routers.prowlarr.entrypoints=https"
      - "traefik.http.routers.prowlarr.tls=true"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    restart: unless-stopped


  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/London
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped 